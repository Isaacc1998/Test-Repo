{"version":3,"file":"main.js","mappings":"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","sources":["webpack://warfaretacticscopy/./src/scripts/atGunner.js","webpack://warfaretacticscopy/./src/scripts/levels.js","webpack://warfaretacticscopy/./src/scripts/unit.js","webpack://warfaretacticscopy/webpack/bootstrap","webpack://warfaretacticscopy/webpack/runtime/compat get default export","webpack://warfaretacticscopy/webpack/runtime/define property getters","webpack://warfaretacticscopy/webpack/runtime/global","webpack://warfaretacticscopy/webpack/runtime/hasOwnProperty shorthand","webpack://warfaretacticscopy/webpack/runtime/publicPath","webpack://warfaretacticscopy/./assets/grass.png","webpack://warfaretacticscopy/./assets/dirt.png","webpack://warfaretacticscopy/./assets/crate1.png","webpack://warfaretacticscopy/./assets/rifle.png","webpack://warfaretacticscopy/./assets/grenade.png","webpack://warfaretacticscopy/./assets/sniper.png","webpack://warfaretacticscopy/./src/scripts/board.js","webpack://warfaretacticscopy/./src/scripts/rifleman.js","webpack://warfaretacticscopy/./src/scripts/sniper.js","webpack://warfaretacticscopy/./src/scripts/game.js","webpack://warfaretacticscopy/./src/scripts/player.js","webpack://warfaretacticscopy/./assets/water.png","webpack://warfaretacticscopy/./src/index.js"],"sourcesContent":["const Unit = require(\"./unit\").default;\n\nclass AtGunner extends Unit {\n  constructor(name, owner = null) {\n    super(\"atGunner\", 11, 8, 1, 3, 2);\n    this.name = name;\n    this.owner = owner;\n  }\n}\n\nmodule.exports = AtGunner;\n","module.exports = BATTLEFIELDS = {\n  levelOne: [\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 1, 1, 0, 0],\n    [0, 3, 3, 3, 0, 0, 1, 1, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, 0, 0, 3, 3, 3, 0, 0],\n    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n    [0, 3, 3, 3, 0, 0, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n  ],\n\n  levelTwo: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n\n  background: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n    [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n    [0, 0, 2, 2, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0],\n    [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n};\n","class Unit {\n  constructor(type, health, attack, defense, range, move) {\n    this.type = type;\n    this.health = health;\n    this.attack = attack;\n    this.defense = defense;\n    this.range = range;\n    this.move = move;\n    this.alive = true;\n    this.items = [];\n    this.pos = [];\n    //ammo\n    //clip\n  }\n\n  setAlive(status) {\n    this.alive = status;\n  }\n\n  setPiece(pos) {\n    this.pos = pos;\n  }\n\n  move(newPos) {\n    this.pos = newPos;\n  }\n\n  giveItem(item) {\n    this.items.push(item);\n  }\n\n  isAlive() {\n    return this.alive;\n  }\n\n  takeDamage(dmg) {\n    console.log(\"damage\");\n    this.health = this.health - (dmg - this.defense);\n    // if (this.health < 0) {\n    //   this.health = 0;\n    // }\n    if (this.health === 0 || this.health < 0) {\n      this.setAlive(false);\n    }\n  }\n}\n\nexport default Unit;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default __webpack_public_path__ + \"d034f4a2c47c3c3068620d55db618d75.png\";","export default __webpack_public_path__ + \"0292f15a5491340be2c96175987a8688.png\";","export default __webpack_public_path__ + \"333aade2b420735d47a87dd3d53a9a5b.png\";","export default __webpack_public_path__ + \"2b352f91ad3be142bfce4bea52b5f365.png\";","export default __webpack_public_path__ + \"0584e2e99122dcec4480a418401ea098.png\";","export default __webpack_public_path__ + \"7c1edc51cc1dd9e0de4e2ae4c6c1db63.png\";","import Grass from \"../../assets/grass.png\";\nimport Dirt from \"../../assets/dirt.png\";\nimport Crate from \"../../assets/crate1.png\";\nimport Rifleman from \"../../assets/rifle.png\";\nimport Grenade from \"../../assets/grenade.png\";\nimport Sniper from \"../../assets/sniper.png\";\nimport Player from \"./player\";\n// const Player = require(\"./player\").default;\nimport Unit from \"./unit\";\n// const Unit = require(\"./unit\").default;\n// const Levels = require(\"./levels\").default;\nlet count = document.querySelector(\".tCount\");\nlet name = document.querySelector(\".name\");\nclass Board {\n  //edit\n  constructor(grid, playerUnits, enemyUnits) {\n    this.death = false;\n    this.moved = false;\n    this.startingPos = [];\n\n    this.grid = grid;\n    //this.objectGrid = this.createObjectGrid();\n    this.units = playerUnits;\n    this.enemies = enemyUnits;\n    this.characterKey = {};\n    this.enemyNames = [];\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemyNames.push(this.enemies[i].name);\n    }\n    this.unitOrder = this.setTurnOrder();\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      this.characterKey[this.unitOrder[i].name] = this.unitOrder[i];\n    }\n    // console.log(this.characterKey);\n    this.currentTurn = 0;\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    this.unitGrid = new Array(10);\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      this.unitGrid[i] = new Array(10);\n    }\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      for (let j = 0; j < this.unitGrid[i].length; j++) {\n        this.unitGrid[i][j] = 0;\n      }\n    }\n    this.battlefield = this.drawBattlefield();\n    this.cellSize = 67;\n    this.padding = 2;\n    this.setPos();\n    this.tiles = [];\n    this.fillTiles();\n    this.unitImages = [];\n    this.generateUnitImages();\n    //this.unitContexts = this.createUnitCanvas();\n    this.generateHTMLsquares();\n    this.generateHTMLunits();\n    this.currentMoveCount = this.unitTurn.move;\n  }\n\n  setCurrentMoveCount() {\n    this.currentMoveCount = this.unitTurn.move;\n  }\n\n  attack(target) {\n    let attackedUnit = this.characterKey[target];\n    if (this.inRange(attackedUnit)) {\n      // console.log(\"before damge\");\n      attackedUnit.takeDamage(this.unitTurn.attack);\n      if (!attackedUnit.isAlive()) {\n        // console.log(attackedUnit.isAlive(), \"unit alive state\");\n        // console.log(\"removing unit\");\n        this.removeUnit(attackedUnit);\n      }\n    }\n  }\n\n  inRange(target) {\n    let range = this.unitTurn.range;\n    // console.log(target);\n    // console.log(this.unitTurn);\n    let xDif = target.pos[0] - this.unitTurn.pos[0];\n    let yDif = target.pos[1] - this.unitTurn.pos[1];\n    while (xDif !== 0) {\n      if (xDif > 0) {\n        xDif--;\n        range--;\n      } else if (xDif < 0) {\n        xDif++;\n        range--;\n      }\n    }\n\n    while (yDif !== 0) {\n      if (yDif > 0) {\n        yDif--;\n        range--;\n      } else if (yDif < 0) {\n        yDif++;\n        range--;\n      }\n    }\n    if (range < 0) {\n      return false;\n    }\n    return true;\n  }\n\n  findClickedUnit(name) {\n    // console.log(name);\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      if (this.unitOrder[i].name === name) {\n        let alliance;\n        let type;\n        if (this.unitOrder[i].owner === null) {\n          alliance = \"Player 2\";\n        } else {\n          alliance = \"Player 1\";\n        }\n        if (this.unitOrder[i].type === \"atGunner\") {\n          type = \"RPG\";\n        } else {\n          type = this.unitOrder[i].type;\n        }\n        return [\n          this.unitOrder[i].health,\n          this.unitOrder[i].attack,\n          this.unitOrder[i].defense,\n          this.unitOrder[i].name,\n          type,\n          alliance,\n        ];\n      }\n    }\n  }\n\n  savePositions() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.getElementById(\n            `${this.unitGrid[row][col].name}`\n          );\n          unitClick.style.position = \"absolute\";\n          // console.log(\n          //   this.unitGrid[row][col].name,\n          //   row,\n          //   col,\n          //   \"this is unit name\"\n          // );\n          unitClick.style.top = `${row * 69}px`;\n          unitClick.style.left = `${col * 69}px`;\n        }\n      }\n    }\n  }\n\n  generateUnitImages() {\n    let rifleman = new Image();\n    rifleman.src = Rifleman;\n    rifleman.id = \"rifle1\";\n    this.unitImages.push(rifleman);\n\n    let sniper = new Image();\n    sniper.src = Sniper;\n    sniper.id = \"sniper1\";\n    this.unitImages.push(sniper);\n\n    let launcher = new Image();\n    launcher.src = Grenade;\n    launcher.id = \"launcher1\";\n    this.unitImages.push(launcher);\n  }\n\n  fillTiles() {\n    let grass = new Image();\n    grass.src = Grass;\n    this.tiles.push(grass);\n\n    let dirt = new Image();\n    dirt.src = Dirt;\n    this.tiles.push(dirt);\n\n    let crate = new Image();\n    crate.src = Crate;\n    this.tiles.push(crate);\n  }\n\n  setPos() {\n    for (let i = 0; i < this.units.length; i++) {\n      this.units[i].setPiece([0, i + 2]);\n      this.unitGrid[0][i + 2] = this.units[i];\n    }\n\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].setPiece([this.unitGrid.length - 2, i + 4]);\n      this.unitGrid[this.unitGrid.length - 2][i + 4] = this.enemies[i];\n    }\n  }\n\n  isValidMove(x, y) {\n    if (\n      (this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0 ||\n        this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 1) &&\n      this.unitGrid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0\n    ) {\n      return true;\n    }\n    //check starting position of units\n\n    return false;\n  }\n\n  updateGrid(x, y, value) {\n    // console.log(x, y, \"updating grid\");\n    this.unitGrid[x][y] = value;\n  }\n\n  moveunit = ({ keyCode }) => {\n    if (keyCode === 37) {\n      if (this.isValidMove(-1, 0)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0],\n          this.unitTurn.pos[1] - 1,\n          this.unitTurn\n        );\n        this.unitTurn.pos[1]--;\n        this.currentMoveCount--;\n        // console.log(this.unitTurn.pos, \"tis is unt position\");\n      }\n    } else if (keyCode === 39) {\n      if (this.isValidMove(1, 0)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0],\n          this.unitTurn.pos[1] + 1,\n          this.unitTurn\n        );\n        this.unitTurn.pos[1]++;\n        this.currentMoveCount--;\n        // console.log(this.unitTurn.pos, \"tis is unt position\");\n      }\n    } else if (keyCode === 38) {\n      if (this.isValidMove(0, -1)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0] - 1,\n          this.unitTurn.pos[1],\n          this.unitTurn\n        );\n        this.unitTurn.pos[0]--;\n        this.currentMoveCount--;\n        // console.log(this.unitTurn.pos, \"tis is unt position\");\n      }\n    } else if (keyCode === 40) {\n      if (this.isValidMove(0, 1)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0] + 1,\n          this.unitTurn.pos[1],\n          this.unitTurn\n        );\n        this.unitTurn.pos[0]++;\n        this.currentMoveCount--;\n        // console.log(this.unitTurn.pos, \"tis is unt position\");\n      }\n    }\n    let counter = document.getElementById(\"moveCounter\");\n    counter.textContent = `Moves Left: ${this.currentMoveCount}`;\n\n    if (this.currentMoveCount === 0) {\n      document.removeEventListener(\"keydown\", this.moveunit);\n      // let counter = document.getElementById(\"moveCounter\");\n      // counter.style.display = \"none\";\n      // let moveOptions = document.getElementsByClassName(\"moveB\");\n      // for (let i = 0; i < moveOptions.length; i++) {\n      //   moveOptions[i].style.display = \"block\";\n      // }\n      // move.style.display = \"none\";\n      return;\n    }\n  };\n\n  getCenter(w, h) {\n    return {\n      x: window.innerWidth / 2 - w / 2 + \"px\",\n      y: window.innerHeight / 2 - h / 2 + \"px\",\n    };\n  }\n\n  // createUnitCanvas() {\n  //   let arr = [];\n  //   for (let i = 0; i < this.unitOrder.length; i++) {\n  //     let unit = document.createElement(\"canvas\");\n  //     unit.id = `${this.unitOrder[i].name}`;\n  //     let unitContext = unit.getContext(\"2d\");\n\n  //     document.body.appendChild(unit);\n  //     let container = document.getElementById(\"container\");\n  //     container.appendChild(unit);\n  //     arr.push(unitContext);\n  //   }\n  //   return arr;\n  // }\n\n  drawBattlefield() {\n    this.canvas = document.getElementById(\"game\");\n    this.context = this.canvas.getContext(\"2d\");\n    // this.canvas.style.width = 680;\n    // this.canvas.style.height = 680;\n    // this.canvas.style.display = \"inline-block\";\n    // this.canvas.style.position = \"relative\";\n    this.canvas.style.background = \"#949494\";\n    this.canvas.style.zIndex = 11;\n    // this.canvas.style.right = \"190\";\n    // this.canvas.style.bottom = \"686\";\n\n    // document.body.appendChild(this.canvas);\n    // let container = document.getElementById(\"container\");\n    // container.appendChild(this.canvas);\n\n    return this.context;\n  }\n\n  generateHTMLsquares() {\n    let id_count = 0;\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        let square = document.createElement(\"div\");\n        square.id = `${id_count}`;\n        square.className = \"square\";\n        square.style.position = \"absolute\";\n        // console.log(row, \"row\");\n        // console.log(col, \"col\");\n        // console.log(this.cellSize, \"cellsize\");\n\n        square.style.top = `${row * 69}px`;\n        square.style.left = `${col * 69}px`;\n        square.style.width = `${69}px`;\n        square.style.height = `${69}px`;\n        // document.body.appendChild(square);\n        square.style.zIndex = 100;\n        // this.battlefield.canvas.appendChild(square);\n        let squares = document.getElementById(\"squares\");\n        squares.appendChild(square);\n        id_count++;\n      }\n    }\n  }\n\n  generateHTMLunits() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.createElement(\"div\");\n          unitClick.id = `${this.unitGrid[row][col].name}`;\n          unitClick.className = \"unit\";\n          unitClick.style.position = \"absolute\";\n          unitClick.style.top = `${row * 69}px`;\n          unitClick.style.left = `${col * 69}px`;\n          unitClick.style.width = `${69}px`;\n          unitClick.style.height = `${69}px`;\n          // unitClick.style.top = row * (this.cellSize + this.padding);\n          // unitClick.style.left = col * (this.cellSize + this.padding);\n          // unitClick.style.width = this.cellSize;\n          // unitClick.style.height = this.cellSize;\n          unitClick.style.zIndex = 101;\n          let squares = document.getElementById(\"squares\");\n          squares.appendChild(unitClick);\n        }\n      }\n    }\n  }\n\n  // renderUnits() {\n  //     for (let i = 0; i < this.unitOrder.length; i++) {\n  //         let unitContext = this.unitContexts[i];\n\n  //         const w = (this.cellSize + this.padding) * this.grid[0].length - (this.padding);\n  //         const h = (this.cellSize + this.padding) * this.grid.length - (this.padding);\n\n  //         unitContext.canvas.width = w;\n  //         unitContext.canvas.height = h;\n\n  //         const center = this.getCenter(w, h);\n  //         unitContext.canvas.style.marginLeft = center.x\n  //         unitContext.canvas.style.marginTop = center.y;\n\n  //         let image;\n  //         if (this.unitOrder[i].type === \"rifleman\") {\n  //             image = this.unitImages[0];\n  //         } else if (this.unitOrder[i].type === \"sniper\") {\n  //             image = this.unitImages[1];\n  //         } else if (this.unitOrder[i].type === \"atGunner\") {\n  //             image = this.unitImages[2];\n  //         }\n\n  //         unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n  //     }\n  // }\n\n  render() {\n    const w =\n      (this.cellSize + this.padding) * this.grid[0].length - this.padding;\n    const h = (this.cellSize + this.padding) * this.grid.length - this.padding;\n\n    // this.battlefield.canvas.width = w;\n    // this.battlefield.canvas.height = h;\n\n    // const center = this.getCenter(w, h);\n    // this.battlefield.canvas.style.marginLeft = center.x;\n    // this.battlefield.canvas.style.marginTop = center.y;\n\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        const val = this.grid[row][col];\n\n        let image;\n        let sx = 0;\n        let sy = 0;\n        if (val === 0) {\n          image = this.tiles[0];\n          sx = 144;\n          sy = 144;\n        } else if (val === 1) {\n          image = this.tiles[1];\n          sx = 144;\n          sy = 144;\n        } else if (val === 3) {\n          image = this.tiles[2];\n          sx = 1;\n          sy = 0;\n        }\n\n        //drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)\n        this.battlefield.drawImage(\n          image,\n          sx,\n          sy,\n          30,\n          30,\n          col * (this.cellSize + this.padding),\n          row * (this.cellSize + this.padding),\n          this.cellSize,\n          this.cellSize\n        );\n        //create corresponding html box element\n        //let boxElement = document.createElement('div');\n        // this.battlefield.canvas.style.width = this.cellSize;\n        // this.battlefield.canvas.style.height = this.cellSize;\n        let x;\n        let y;\n        let image2;\n        let id;\n        if (this.unitGrid[row][col] instanceof Unit) {\n          x = this.unitGrid[row][col].pos[1];\n          y = this.unitGrid[row][col].pos[0];\n          if (this.unitGrid[row][col].type === \"rifleman\") {\n            image2 = this.unitImages[0];\n            id = \"rifle1\";\n          } else if (this.unitGrid[row][col].type === \"sniper\") {\n            image2 = this.unitImages[1];\n            id = \"rifle1\";\n          } else if (this.unitGrid[row][col].type === \"atGunner\") {\n            image2 = this.unitImages[2];\n            id = \"launcher1\";\n          }\n\n          if (this.unitGrid[row][col].owner === null) {\n            // image2.style.transform = \"rotate(180deg)\";\n            // document.getElementById(`${id}`).style.transform = \"rotate(180deg)\";\n            this.battlefield.drawImage(\n              image2,\n              8,\n              8,\n              48,\n              48,\n              col * (this.cellSize + this.padding),\n              row * (this.cellSize + this.padding),\n              this.cellSize,\n              this.cellSize\n            );\n          } else {\n            this.battlefield.drawImage(\n              image2,\n              8,\n              8,\n              48,\n              48,\n              col * (this.cellSize + this.padding),\n              row * (this.cellSize + this.padding),\n              this.cellSize,\n              this.cellSize\n            );\n          }\n        }\n        // unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n\n        // this.battlefield.fillStyle = color;\n        // this.battlefield.fillRect(col * (this.cellSize + this.padding),\n        // row * (this.cellSize + this.padding),\n        // this.cellSize, this.cellSize);\n      }\n    }\n  }\n\n  renderOptions() {\n    let context = document.getElementById(\"\");\n    let button1 = document.createElement(\"button\");\n    let button2 = document.createElement(\"button\");\n    let button3 = document.createElement(\"button\");\n    let button4 = document.createElement(\"button\");\n\n    button1.class = \"move\";\n    button2.class = \"attack\";\n    button3.class = \"items\";\n    button4.class = \"defend\";\n\n    button1.style.display = \"block\";\n  }\n\n  draw(name) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.id = name;\n    let w = canvas.width;\n    let h = canvas.height;\n    let context = canvas.getContext(\"2d\");\n    document.body.appendChild(canvas);\n    //canvas.style.display = \"none\";\n    if (name === \"moveOptions\") {\n      this.renderOptions();\n    }\n    return this.context;\n  }\n\n  drawSquare(x, y, w, h, color) {\n    this.battlefieldContext.lineWidth = 1;\n    this.battlefieldContext.fillStyle = color;\n    this.battlefieldContext.fillRect(x, y, w, h);\n    this.battlefieldContext.strokeRect(x, y, w, h);\n  }\n\n  drawGrid() {\n    let x = 0;\n    let y = 0;\n    let w = this.squareSize;\n    let h = this.squareSize;\n\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid.length; j++) {\n        if (this.grid[i][j] === 0) {\n          this.drawSquare(x, y, w, h, \"#d3d3d2\");\n        } else {\n          this.drawSquare(x, y, w, h, \"#111\");\n        }\n        x += w;\n      }\n      y += h;\n      x = 0;\n    }\n  }\n\n  enemyAction() {\n    //ai functionality\n    //has to click end turn button\n  }\n\n  nextTurn() {\n    // if (this.gameEnd()) {\n    //   //victory or loss screen\n    // }\n    this.currentTurn++;\n    document.getElementById(\"tCount\").textContent = this.currentTurn + 1;\n    //have to update unit turn, because constructor only called once\n    if (this.death === true) {\n      this.unitTurn =\n        this.unitOrder[this.currentTurn % (this.unitOrder.length + 1)];\n      // console.log(this.currentTurn % (this.unitOrder.length + 1), \"index\");\n    } else {\n      this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n      // console.log(this.currentTurn % this.unitOrder.length, \"index\");\n    }\n    // console.log(this.unitOrder, \"this the array\");\n\n    document.getElementById(\"name\").textContent = `${this.unitTurn.name}`;\n    this.death = false;\n    if (this.unitTurn.type === null) {\n      this.enemyAction();\n    }\n    this.gameEnd();\n  }\n\n  gameEnd() {\n    // if (this.currentTurn === 50) {\n    //   console.log(\"You lose!\");\n    //   return true;\n    // }\n\n    if (this.won()) {\n      // console.log(\"You win!\");\n      let squares = document.getElementById(\"squares\");\n      while (squares.firstChild) {\n        squares.removeChild(squares.lastChild);\n      }\n      document.getElementById(\"victory\").style.display = \"block\";\n      document.getElementById(\"winner\").innerHTML = \"Player 1 Wins!\";\n      return true;\n    } else if (this.lost()) {\n      // console.log(\"You lose!\");\n      let squares = document.getElementById(\"squares\");\n      while (squares.firstChild) {\n        squares.removeChild(squares.lastChild);\n      }\n      document.getElementById(\"victory\").style.display = \"block\";\n      document.getElementById(\"winner\").innerHTML = \"Player 2 Wins!\";\n      return true;\n    }\n    return false;\n  }\n\n  removeUnit(unit) {\n    // let index = this.unitOrder.indexOf(unit);\n    // if (index > -1) {\n    //   this.unitOrder.splice(index, 1);\n    // }\n    this.death = true;\n    let newUnitOrder = [];\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      if (this.unitOrder[i].name !== unit.name) {\n        newUnitOrder.push(this.unitOrder[i]);\n      }\n    }\n    this.unitOrder = newUnitOrder;\n\n    let newEnemies = [];\n    let newAllies = [];\n    for (let i = 0; i < this.enemies.length; i++) {\n      if (this.enemies[i].name !== unit.name) {\n        newEnemies.push(this.enemies[i]);\n      }\n    }\n    this.enemies = newEnemies;\n\n    for (let i = 0; i < this.units.length; i++) {\n      if (this.units[i].name !== unit.name) {\n        newAllies.push(this.units[i]);\n      }\n    }\n    this.units = newAllies;\n\n    let x = unit.pos[0];\n    let y = unit.pos[1];\n    this.unitGrid[x][y] = 0;\n    // if (unit.owner === null) {\n    //   this.enemies.splice(this.enemies.indexOf(unit), 1);\n    // } else {\n    //   this.units.splice(this.units.indexOf(unit), 1);\n    // }\n\n    // let deadUnit = document.getElementById(unit.name);\n    // deadUnit.remove();\n    this.gameEnd();\n    this.savePositions();\n    // this.nextTurn();\n    this.setCurrentMoveCount();\n    let move = document.getElementById(\"move\");\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n\n    // console.log(this.enemies, \"enemies array\");\n    // console.log(this.units, \"allies array\");\n  }\n\n  // attack(pos) {\n  //     let x = pos[0];\n  //     let y = pos[1];\n\n  //     if (this.grid[x][y] instanceof Unit && this.grid[x][y].type === null) {\n  //         this.grid[x][y].takeDamage(this.unitTurn.attack);\n  //         if (this.grid[x][y].alive === false) {\n  //             this.removeUnit(this.grid[x][y]);\n  //         }\n  //         return true;\n  //     }\n  //     return false;\n  // }\n\n  moveUnit(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    let current = this.unitTurn.pos;\n    let newPos = [current[0] + x, current[1] + y];\n    if (this.validMove(newPos)) {\n      this.unitTurn.move(newPos);\n      if (this.unitTurn.owner != null) {\n        this.grid[newPos[0]][newPos[1]] = this.unitTurn;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  validMove(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    if (x > 9 || x < 0 || y > 9 || y < 0) {\n      return false;\n    }\n    if (this.grid[x][y] !== 1 || this.grid[x][y] !== 0) {\n      return false;\n    }\n    return true;\n  }\n\n  won() {\n    if (this.enemies.length === 0) {\n      // console.log(this.enemies.length, \"enemies length\");\n      return true;\n    }\n    // if (this.currentTurn === 5) {\n    //   return true;\n    // }\n    return false;\n  }\n\n  lost() {\n    if (this.units.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  setTurnOrder() {\n    let arr = [];\n    let unitCount = 0;\n    let enemyCount = 0;\n    for (let i = 0; i < this.units.length + this.enemies.length; i++) {\n      if (i % 2 === 0) {\n        arr.push(this.units[unitCount]);\n        unitCount++;\n      } else {\n        arr.push(this.enemies[enemyCount]);\n        enemyCount++;\n      }\n    }\n    console.log(arr);\n    return arr;\n  }\n\n  shuffleArray(array) {\n    let i = array.length;\n    let rand = i;\n    while (i >= 0) {\n      rand = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[rand];\n      array[rand] = temp;\n      i--;\n    }\n    return array;\n  }\n\n  renderStatus() {}\n\n  // createObjectGrid() {\n  //     let newGrid = [...Array(10)].map(e => Array(10));\n  //     for (let i = 0; i < this.grid.length; i++) {\n  //         for (let j = 0; j < this.grid.length; j++) {\n  //             if (this.grid[i][j] === 0) {\n  //                 newGrid[i][j].push(new Plain());\n  //             } else if (this.grid[i][j] === 1) {\n  //                 newGrid[i][j].push(new Wall());\n  //             } else if (this.grid[i][j] === 2) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 3) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 4) {\n  //                 newGrid[i][j].push();\n  //             } else {\n  //                 newGrid[i][j].push();\n  //             }\n  //         }\n  //     }\n  //     return newGrid;\n  // }\n}\n\nexport default Board;\n","import Unit from \"./unit\";\nclass Rifleman extends Unit {\n  constructor(name, owner = null) {\n    super(\"rifleman\", 10, 5, 1, 3, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n}\n\nexport default Rifleman;\n","import Unit from \"./unit\";\n\nclass Sniper extends Unit {\n  constructor(name, owner = null) {\n    super(\"sniper\", 10, 5, 0, 5, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n}\n\nexport default Sniper;\n","import Board from \"./board\";\nimport Levels from \"./levels\";\nimport Player from \"./player\";\nimport Rifleman from \"./rifleman\";\nimport Sniper from \"./sniper\";\nimport AtGunner from \"./atGunner\";\nimport Unit from \"./unit\";\n\nclass Game {\n  constructor(stage) {\n    this.board;\n    this.stage = stage;\n    if (this.stage === 1) {\n      let player = new Player(\"user\");\n      let units = [\n        new Rifleman(\"Bob\", player),\n        new Rifleman(\"Joe\", player),\n        new Sniper(\"Lex\", player),\n        new AtGunner(\"Steve\", player),\n      ];\n      let enemies = [\n        new Rifleman(\"Ben\"),\n        new Rifleman(\"Ryan\"),\n        new Sniper(\"Dakota\"),\n        new AtGunner(\"Gunther\"),\n      ];\n      this.board = new Board(BATTLEFIELDS.levelOne, units, enemies, player);\n      //this.board.render();\n      this.runGame(this.board);\n    } else if (this.stage === 2) {\n    }\n  }\n\n  // loadTitleScreen() {}\n\n  runGame(board) {\n    let context = board.battlefield;\n    function animate() {\n      window.requestAnimationFrame(animate);\n      board.render();\n    }\n    animate();\n  }\n}\n\nexport default Game;\n","// import Levels from \"./level\";\nclass Player {\n  constructor(type) {\n    this.type = type;\n    this.playerUnits = [];\n  }\n\n  assignUnits(units) {\n    this.playerUnits.concat(units);\n  }\n}\n\nexport default Player;\n","export default __webpack_public_path__ + \"fb365042996395b7e7374012d1941315.png\";","import Game from \"./scripts/game\";\nimport Board from \"./scripts/board\";\nimport Background from \"./scripts/menuBackground\";\nimport Levels from \"./scripts/levels\";\n\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  // let stage;\n  let newGame;\n\n  document.getElementById(\"return\").addEventListener(\"click\", () => {\n    document.getElementById(\"name\").textContent = \"Bob\";\n    document.getElementById(\"tCount\").textContent = 1;\n    document.getElementById(\"victory\").style.display = \"none\";\n    document.getElementById(\"view\").style.display = \"none\";\n\n    document.getElementById(\"stage-select\").style.display = \"none\";\n    document.getElementById(\"start-game\").style.display = \"block\";\n    document.getElementById(\"title-screen\").style.display = \"\";\n  });\n\n  document.getElementById(\"confirm-move\").addEventListener(\"click\", () => {\n    newGame.board.savePositions();\n    // newGame.board.generateHTMLunits();\n    document.removeEventListener(\"keydown\", newGame.board.moveUnit);\n    let counter = document.getElementById(\"moveCounter\");\n    counter.style.display = \"none\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n    move.style.display = \"none\";\n    document.getElementById(\"moveText\").style.display = \"none\";\n  });\n\n  document.getElementById(\"cancel-move\").addEventListener(\"click\", () => {\n    let currentPos = newGame.board.unitTurn.pos;\n    let startingPos = newGame.board.startingPos;\n    newGame.board.updateGrid(currentPos[0], currentPos[1], 0);\n    newGame.board.updateGrid(\n      startingPos[0],\n      startingPos[1],\n      newGame.board.unitTurn\n    );\n    newGame.board.unitTurn.pos = startingPos;\n    console.log(newGame.board.unitTurn.pos, \"reset unit position\");\n    newGame.board.setCurrentMoveCount();\n    // newGame.board.savePositions();\n\n    document.removeEventListener(\"keydown\", newGame.board.moveUnit);\n    let counter = document.getElementById(\"moveCounter\");\n    counter.style.display = \"none\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n    // move.style.display = \"none\";\n    document.getElementById(\"moveText\").style.display = \"none\";\n  });\n\n  document.getElementById(\"cancel-move\").addEventListener(\"click\", () => {});\n\n  document.getElementById(\"move\").addEventListener(\"click\", () => {\n    let temp = [...newGame.board.unitTurn.pos];\n    newGame.board.startingPos = temp;\n    console.log(newGame.board.startingPos, \"starting pos\");\n    document.getElementById(\"left\").style.display = \"none\";\n    document.getElementById(\"right\").style.display = \"none\";\n    document.getElementById(\"moveText\").style.display = \"block\";\n  });\n\n  document.getElementById(\"cancel-attack\").addEventListener(\"click\", () => {\n    document.getElementById(\"attackText\").style.display = \"none\";\n    // document.getElementById(\"moveOption\").style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n  });\n\n  document.getElementById(\"start-game\").addEventListener(\"click\", () => {\n    document.getElementById(\"start-game\").style.display = \"none\";\n    document.getElementById(\"stage-select\").style.display = \"block\";\n  });\n\n  document.getElementById(\"standard\").addEventListener(\"click\", () => {\n    newGame = new Game(1);\n    document.getElementById(\"title-screen\").style.display = \"none\";\n    document.getElementById(\"view\").style.display = \"block\";\n    let units = document.getElementsByClassName(\"unit\");\n    for (let i = 0; i < units.length; i++) {\n      units[i].addEventListener(\"mouseover\", (e) => {\n        let stats = newGame.board.findClickedUnit(e.target.id);\n        let info = document.getElementById(\"unitInfo\");\n        info.innerHTML = `\n        Name: ${stats[3]}\\n\n        <br>\n        Type: ${stats[4]}\\n\n        <br>\n        Alliance: ${stats[5]}\n        <br>\n        <br>\n        HP: ${stats[0]}\\n\n        <br>\n        ATK: ${stats[1]}\\n\n        <br>\n        DEF: ${stats[2]}\\n\n        <br>`;\n      });\n    }\n    //for testing***\n    // newGame.won();\n  });\n\n  document.getElementById(\"bridge\").addEventListener(\"click\", () => {\n    newGame = new Game(2);\n    document.getElementById(\"title-screen\").style.display = \"none\";\n    document.getElementById(\"view\").style.display = \"block\";\n  });\n\n  let endTurn = document.getElementById(\"end\");\n\n  endTurn.addEventListener(\"click\", () => {\n    newGame.board.savePositions();\n    newGame.board.nextTurn();\n    newGame.board.setCurrentMoveCount();\n    newGame.board.moved = false;\n    let move = document.getElementById(\"move\");\n    let attackText = document.getElementById(\"attackText\");\n    attackText.style.display = \"none\";\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n    document.getElementById(\"moveText\").style.display = \"none\";\n  });\n\n  let move = document.getElementById(\"move\");\n  move.addEventListener(\"click\", () => {\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"none\";\n    }\n    let counter = document.getElementById(\"moveCounter\");\n    counter.style.display = \"block\";\n    counter.textContent = `Moves Left: ${newGame.board.currentMoveCount}`;\n    document.addEventListener(\"keydown\", newGame.board.moveunit);\n\n    // if (newGame.board.currentMoveCount === 0) {\n    //     //delete counter\n    //     let counter = document.getElementById(\"moveCounter\");\n    //     counter.style.display = \"none\";\n    //     //add moveOptions\n    //     let moveOptions = document.getElementsByClassName(\"moveB\");\n    //     for (let i = 0; i < moveOptions.length; i++) {\n    //         moveOptions[i].style.display = \"block\";\n    //     }\n    //     move.style.display = \"none\";\n    // }\n  });\n\n  let squares = document.getElementsByClassName(\"square\");\n  for (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener(\"mouseover\", (e) => {\n      console.log(e.target.id);\n    });\n  }\n\n  let attack = document.getElementById(\"attack\");\n  attack.addEventListener(\"click\", () => {\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"none\";\n    }\n\n    let attackText = document.getElementById(\"attackText\");\n    attackText.style.display = \"block\";\n\n    let player = newGame.unitTurn.owner;\n\n    let units = document.getElementsByClassName(\"unit\");\n    for (let i = 0; i < units.length; i++) {\n      let that = units[i];\n      // if (player && that.) {\n      // }\n      units[i].addEventListener(\n        \"click\",\n        (e) => {\n          if (\n            newGame.board.enemyNames.includes(e.target.id) &&\n            newGame.board.unitTurn.owner !== null\n          ) {\n            newGame.board.attack(e.target.id);\n            newGame.board.savePositions();\n            newGame.board.nextTurn();\n            newGame.board.setCurrentMoveCount();\n            let move = document.getElementById(\"move\");\n            move.style.display = \"block\";\n            let attackText = document.getElementById(\"attackText\");\n            attackText.style.display = \"none\";\n            for (let i = 0; i < moveOptions.length; i++) {\n              moveOptions[i].style.display = \"block\";\n            }\n          }\n          that.removeEventListener();\n        },\n        { once: true }\n      );\n    }\n  });\n});\n"],"names":["Unit","require","module","exports","constructor","name","owner","super","this","BATTLEFIELDS","levelOne","levelTwo","background","type","health","attack","defense","range","move","alive","items","pos","setAlive","status","setPiece","newPos","giveItem","item","push","isAlive","takeDamage","dmg","console","log","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","querySelector","Rifleman","Sniper","stage","board","player","playerUnits","assignUnits","units","concat","AtGunner","enemies","grid","enemyUnits","keyCode","isValidMove","updateGrid","unitTurn","currentMoveCount","getElementById","textContent","removeEventListener","moveunit","death","moved","startingPos","characterKey","enemyNames","i","unitOrder","setTurnOrder","currentTurn","unitGrid","Array","j","battlefield","drawBattlefield","cellSize","padding","setPos","tiles","fillTiles","unitImages","generateUnitImages","generateHTMLsquares","generateHTMLunits","setCurrentMoveCount","target","attackedUnit","inRange","removeUnit","xDif","yDif","findClickedUnit","alliance","savePositions","row","col","unitClick","style","position","top","left","rifleman","Image","id","sniper","launcher","Grenade","grass","Grass","dirt","Dirt","crate","Crate","x","y","value","getCenter","w","h","innerWidth","innerHeight","canvas","context","getContext","zIndex","id_count","square","createElement","className","width","height","appendChild","render","val","image","image2","sx","sy","drawImage","renderOptions","button1","button2","button3","button4","class","display","draw","body","drawSquare","color","battlefieldContext","lineWidth","fillStyle","fillRect","strokeRect","drawGrid","squareSize","enemyAction","nextTurn","gameEnd","won","squares","firstChild","removeChild","lastChild","innerHTML","lost","unit","newUnitOrder","newEnemies","newAllies","moveOptions","getElementsByClassName","moveUnit","current","validMove","arr","unitCount","enemyCount","shuffleArray","array","rand","Math","floor","random","temp","renderStatus","runGame","animate","requestAnimationFrame","addEventListener","newGame","currentPos","Game","stats","counter","that","includes","once"],"sourceRoot":""}