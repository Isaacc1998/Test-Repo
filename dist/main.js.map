{"version":3,"file":"main.js","mappings":"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","sources":["webpack://warfaretacticscopy/./src/scripts/atGunner.js","webpack://warfaretacticscopy/./src/scripts/levels.js","webpack://warfaretacticscopy/./src/scripts/unit.js","webpack://warfaretacticscopy/webpack/bootstrap","webpack://warfaretacticscopy/webpack/runtime/compat get default export","webpack://warfaretacticscopy/webpack/runtime/define property getters","webpack://warfaretacticscopy/webpack/runtime/global","webpack://warfaretacticscopy/webpack/runtime/hasOwnProperty shorthand","webpack://warfaretacticscopy/webpack/runtime/publicPath","webpack://warfaretacticscopy/./assets/grass.png","webpack://warfaretacticscopy/./assets/dirt.png","webpack://warfaretacticscopy/./assets/crate1.png","webpack://warfaretacticscopy/./assets/rifle.png","webpack://warfaretacticscopy/./assets/grenade.png","webpack://warfaretacticscopy/./assets/sniper.png","webpack://warfaretacticscopy/./src/scripts/board.js","webpack://warfaretacticscopy/./src/scripts/rifleman.js","webpack://warfaretacticscopy/./src/scripts/sniper.js","webpack://warfaretacticscopy/./assets/water.png","webpack://warfaretacticscopy/./src/index.js","webpack://warfaretacticscopy/./src/scripts/game.js","webpack://warfaretacticscopy/./src/scripts/player.js"],"sourcesContent":["const Unit = require(\"./unit\").default;\n\nclass AtGunner extends Unit {\n  constructor(name, owner = null) {\n    super(\"atGunner\", 11, 8, 1, 3, 2);\n    this.name = name;\n    this.owner = owner;\n  }\n}\n\nmodule.exports = AtGunner;\n","module.exports = BATTLEFIELDS = {\n  levelOne: [\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 1, 1, 0, 0],\n    [0, 3, 3, 3, 0, 0, 1, 1, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, 0, 0, 3, 3, 3, 0, 0],\n    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n    [0, 3, 3, 3, 0, 0, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n  ],\n\n  levelTwo: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n\n  background: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n    [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n    [0, 0, 2, 2, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0],\n    [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n};\n","class Unit {\n  constructor(type, health, attack, defense, range, move) {\n    this.type = type;\n    this.health = health;\n    this.attack = attack;\n    this.defense = defense;\n    this.range = range;\n    this.move = move;\n    this.alive = true;\n    this.items = [];\n    this.pos = [];\n    //ammo\n    //clip\n  }\n\n  setAlive(status) {\n    this.alive = status;\n  }\n\n  setPiece(pos) {\n    this.pos = pos;\n  }\n\n  move(newPos) {\n    this.pos = newPos;\n  }\n\n  giveItem(item) {\n    this.items.push(item);\n  }\n\n  isAlive() {\n    return this.alive;\n  }\n\n  takeDamage(dmg) {\n    console.log(\"damage\");\n    this.health = this.health - (dmg - this.defense);\n    if (this.health < 0) {\n      this.health = 0;\n    }\n    if (this.health === 0) {\n      this.alive = false;\n    }\n  }\n}\n\nexport default Unit;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default __webpack_public_path__ + \"d034f4a2c47c3c3068620d55db618d75.png\";","export default __webpack_public_path__ + \"0292f15a5491340be2c96175987a8688.png\";","export default __webpack_public_path__ + \"333aade2b420735d47a87dd3d53a9a5b.png\";","export default __webpack_public_path__ + \"2b352f91ad3be142bfce4bea52b5f365.png\";","export default __webpack_public_path__ + \"0584e2e99122dcec4480a418401ea098.png\";","export default __webpack_public_path__ + \"7c1edc51cc1dd9e0de4e2ae4c6c1db63.png\";","import Grass from \"../../assets/grass.png\";\nimport Dirt from \"../../assets/dirt.png\";\nimport Crate from \"../../assets/crate1.png\";\nimport Rifleman from \"../../assets/rifle.png\";\nimport Grenade from \"../../assets/grenade.png\";\nimport Sniper from \"../../assets/sniper.png\";\nimport Player from \"./player\";\n// const Player = require(\"./player\").default;\nimport Unit from \"./unit\";\n// const Unit = require(\"./unit\").default;\n// const Levels = require(\"./levels\").default;\nlet count = document.querySelector(\".tCount\");\nlet name = document.querySelector(\".name\");\nclass Board {\n  //edit\n  constructor(grid, playerUnits, enemyUnits) {\n    this.grid = grid;\n    //this.objectGrid = this.createObjectGrid();\n    this.units = playerUnits;\n    this.enemies = enemyUnits;\n    this.characterKey = {};\n    this.enemyNames = [];\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemyNames.push(this.enemies[i].name);\n    }\n    this.unitOrder = this.setTurnOrder();\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      this.characterKey[this.unitOrder[i].name] = this.unitOrder[i];\n    }\n    // console.log(this.characterKey);\n    this.currentTurn = 0;\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    this.unitGrid = new Array(10);\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      this.unitGrid[i] = new Array(10);\n    }\n    for (let i = 0; i < this.unitGrid.length; i++) {\n      for (let j = 0; j < this.unitGrid[i].length; j++) {\n        this.unitGrid[i][j] = 0;\n      }\n    }\n    this.battlefield = this.drawBattlefield();\n    this.cellSize = 67;\n    this.padding = 2;\n    this.setPos();\n    this.tiles = [];\n    this.fillTiles();\n    this.unitImages = [];\n    this.generateUnitImages();\n    //this.unitContexts = this.createUnitCanvas();\n    this.generateHTMLsquares();\n    this.generateHTMLunits();\n    this.currentMoveCount = this.unitTurn.move;\n  }\n\n  setCurrentMoveCount() {\n    this.currentMoveCount = this.unitTurn.move;\n  }\n\n  attack(target) {\n    let attackedUnit = this.characterKey[target];\n    if (this.inRange(attackedUnit)) {\n      // console.log(\"before damge\");\n      attackedUnit.takeDamage(this.unitTurn.attack);\n      if (!attackedUnit.isAlive()) {\n        this.removeUnit(attackedUnit);\n      }\n    }\n  }\n\n  inRange(target) {\n    let range = this.unitTurn.range;\n    // console.log(target);\n    // console.log(this.unitTurn);\n    let xDif = target.pos[0] - this.unitTurn.pos[0];\n    let yDif = target.pos[1] - this.unitTurn.pos[1];\n    while (xDif !== 0) {\n      if (xDif > 0) {\n        xDif--;\n        range--;\n      } else if (xDif < 0) {\n        xDif++;\n        range--;\n      }\n    }\n\n    while (yDif !== 0) {\n      if (yDif > 0) {\n        yDif--;\n        range--;\n      } else if (yDif < 0) {\n        yDif++;\n        range--;\n      }\n    }\n    if (range < 0) {\n      return false;\n    }\n    return true;\n  }\n\n  findClickedUnit(name) {\n    // console.log(name);\n    for (let i = 0; i < this.unitOrder.length; i++) {\n      if (this.unitOrder[i].name === name) {\n        let alliance;\n        let type;\n        if (this.unitOrder[i].owner === null) {\n          alliance = \"Player 2\";\n        } else {\n          alliance = \"Player 1\";\n        }\n        if (this.unitOrder[i].type === \"atGunner\") {\n          type = \"RPG\";\n        } else {\n          type = this.unitOrder[i].type;\n        }\n        return [\n          this.unitOrder[i].health,\n          this.unitOrder[i].attack,\n          this.unitOrder[i].defense,\n          this.unitOrder[i].name,\n          type,\n          alliance,\n        ];\n      }\n    }\n  }\n\n  savePositions() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.getElementById(\n            `${this.unitGrid[row][col].name}`\n          );\n          unitClick.style.top = row * (this.cellSize + this.padding);\n          unitClick.style.left = col * (this.cellSize + this.padding);\n        }\n      }\n    }\n  }\n\n  generateUnitImages() {\n    let rifleman = new Image();\n    rifleman.src = Rifleman;\n    this.unitImages.push(rifleman);\n\n    let sniper = new Image();\n    sniper.src = Sniper;\n    this.unitImages.push(sniper);\n\n    let launcher = new Image();\n    launcher.src = Grenade;\n    this.unitImages.push(launcher);\n  }\n\n  fillTiles() {\n    let grass = new Image();\n    grass.src = Grass;\n    this.tiles.push(grass);\n\n    let dirt = new Image();\n    dirt.src = Dirt;\n    this.tiles.push(dirt);\n\n    let crate = new Image();\n    crate.src = Crate;\n    this.tiles.push(crate);\n  }\n\n  setPos() {\n    for (let i = 0; i < this.units.length; i++) {\n      this.units[i].setPiece([0, i + 2]);\n      this.unitGrid[0][i + 2] = this.units[i];\n    }\n\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].setPiece([this.unitGrid.length - 2, i + 4]);\n      this.unitGrid[this.unitGrid.length - 2][i + 4] = this.enemies[i];\n    }\n  }\n\n  isValidMove(x, y) {\n    if (\n      (this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0 ||\n        this.grid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 1) &&\n      this.unitGrid[this.unitTurn.pos[0] + y][this.unitTurn.pos[1] + x] === 0\n    ) {\n      return true;\n    }\n    //check starting position of units\n\n    return false;\n  }\n\n  updateGrid(x, y, value) {\n    this.unitGrid[x][y] = value;\n  }\n\n  moveunit = ({ keyCode }) => {\n    if (keyCode === 37) {\n      if (this.isValidMove(-1, 0)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0],\n          this.unitTurn.pos[1] - 1,\n          this.unitTurn\n        );\n        this.unitTurn.pos[1]--;\n        this.currentMoveCount--;\n      }\n    } else if (keyCode === 39) {\n      if (this.isValidMove(1, 0)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0],\n          this.unitTurn.pos[1] + 1,\n          this.unitTurn\n        );\n        this.unitTurn.pos[1]++;\n        this.currentMoveCount--;\n      }\n    } else if (keyCode === 38) {\n      if (this.isValidMove(0, -1)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0] - 1,\n          this.unitTurn.pos[1],\n          this.unitTurn\n        );\n        this.unitTurn.pos[0]--;\n        this.currentMoveCount--;\n      }\n    } else if (keyCode === 40) {\n      if (this.isValidMove(0, 1)) {\n        this.updateGrid(this.unitTurn.pos[0], this.unitTurn.pos[1], 0);\n        this.updateGrid(\n          this.unitTurn.pos[0] + 1,\n          this.unitTurn.pos[1],\n          this.unitTurn\n        );\n        this.unitTurn.pos[0]++;\n        this.currentMoveCount--;\n      }\n    }\n    if (this.currentMoveCount === 0) {\n      document.removeEventListener(\"keydown\", this.moveunit);\n      let counter = document.getElementById(\"moveCounter\");\n      counter.style.display = \"none\";\n      //add moveOptions\n      let moveOptions = document.getElementsByClassName(\"moveB\");\n      for (let i = 0; i < moveOptions.length; i++) {\n        moveOptions[i].style.display = \"block\";\n      }\n      move.style.display = \"none\";\n      return;\n    }\n    let counter = document.getElementById(\"moveCounter\");\n    counter.textContent = `Moves Left: ${this.currentMoveCount}`;\n  };\n\n  getCenter(w, h) {\n    return {\n      x: window.innerWidth / 2 - w / 2 + \"px\",\n      y: window.innerHeight / 2 - h / 2 + \"px\",\n    };\n  }\n\n  // createUnitCanvas() {\n  //   let arr = [];\n  //   for (let i = 0; i < this.unitOrder.length; i++) {\n  //     let unit = document.createElement(\"canvas\");\n  //     unit.id = `${this.unitOrder[i].name}`;\n  //     let unitContext = unit.getContext(\"2d\");\n\n  //     document.body.appendChild(unit);\n  //     let container = document.getElementById(\"container\");\n  //     container.appendChild(unit);\n  //     arr.push(unitContext);\n  //   }\n  //   return arr;\n  // }\n\n  drawBattlefield() {\n    this.canvas = document.getElementById(\"game\");\n    this.context = this.canvas.getContext(\"2d\");\n    // this.canvas.style.width = 680;\n    // this.canvas.style.height = 680;\n    // this.canvas.style.display = \"inline-block\";\n    // this.canvas.style.position = \"relative\";\n    this.canvas.style.background = \"#949494\";\n    this.canvas.style.zIndex = 11;\n    // this.canvas.style.right = \"190\";\n    // this.canvas.style.bottom = \"686\";\n\n    // document.body.appendChild(this.canvas);\n    // let container = document.getElementById(\"container\");\n    // container.appendChild(this.canvas);\n\n    return this.context;\n  }\n\n  generateHTMLsquares() {\n    let id_count = 0;\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        let square = document.createElement(\"div\");\n        square.id = `${id_count}`;\n        square.className = \"square\";\n        square.style.position = \"absolute\";\n        // console.log(row, \"row\");\n        // console.log(col, \"col\");\n        // console.log(this.cellSize, \"cellsize\");\n\n        square.style.top = `${row * 69}px`;\n        square.style.left = `${col * 69}px`;\n        square.style.width = `${69}px`;\n        square.style.height = `${69}px`;\n        // document.body.appendChild(square);\n        square.style.zIndex = 100;\n        // this.battlefield.canvas.appendChild(square);\n        let squares = document.getElementById(\"squares\");\n        squares.appendChild(square);\n        id_count++;\n      }\n    }\n  }\n\n  generateHTMLunits() {\n    for (let row = 0; row < this.unitGrid.length; row++) {\n      for (let col = 0; col < this.unitGrid[row].length; col++) {\n        if (this.unitGrid[row][col] instanceof Unit) {\n          let unitClick = document.createElement(\"div\");\n          unitClick.id = `${this.unitGrid[row][col].name}`;\n          unitClick.className = \"unit\";\n          unitClick.style.position = \"absolute\";\n          unitClick.style.top = `${row * (this.cellSize + this.padding)}px`;\n          unitClick.style.left = `${col * (this.cellSize + this.padding)}px`;\n          unitClick.style.width = `${this.cellSize}px`;\n          unitClick.style.height = `${this.cellSize}px`;\n          unitClick.style.zIndex = 101;\n          let squares = document.getElementById(\"squares\");\n          squares.appendChild(unitClick);\n        }\n      }\n    }\n  }\n\n  // renderUnits() {\n  //     for (let i = 0; i < this.unitOrder.length; i++) {\n  //         let unitContext = this.unitContexts[i];\n\n  //         const w = (this.cellSize + this.padding) * this.grid[0].length - (this.padding);\n  //         const h = (this.cellSize + this.padding) * this.grid.length - (this.padding);\n\n  //         unitContext.canvas.width = w;\n  //         unitContext.canvas.height = h;\n\n  //         const center = this.getCenter(w, h);\n  //         unitContext.canvas.style.marginLeft = center.x\n  //         unitContext.canvas.style.marginTop = center.y;\n\n  //         let image;\n  //         if (this.unitOrder[i].type === \"rifleman\") {\n  //             image = this.unitImages[0];\n  //         } else if (this.unitOrder[i].type === \"sniper\") {\n  //             image = this.unitImages[1];\n  //         } else if (this.unitOrder[i].type === \"atGunner\") {\n  //             image = this.unitImages[2];\n  //         }\n\n  //         unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n  //     }\n  // }\n\n  render() {\n    const w =\n      (this.cellSize + this.padding) * this.grid[0].length - this.padding;\n    const h = (this.cellSize + this.padding) * this.grid.length - this.padding;\n\n    // this.battlefield.canvas.width = w;\n    // this.battlefield.canvas.height = h;\n\n    // const center = this.getCenter(w, h);\n    // this.battlefield.canvas.style.marginLeft = center.x;\n    // this.battlefield.canvas.style.marginTop = center.y;\n\n    for (let row = 0; row < this.grid.length; row++) {\n      for (let col = 0; col < this.grid[row].length; col++) {\n        const val = this.grid[row][col];\n\n        let image;\n        let sx = 0;\n        let sy = 0;\n        if (val === 0) {\n          image = this.tiles[0];\n          sx = 144;\n          sy = 144;\n        } else if (val === 1) {\n          image = this.tiles[1];\n          sx = 144;\n          sy = 144;\n        } else if (val === 3) {\n          image = this.tiles[2];\n          sx = 1;\n          sy = 0;\n        }\n\n        //drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)\n        this.battlefield.drawImage(\n          image,\n          sx,\n          sy,\n          30,\n          30,\n          col * (this.cellSize + this.padding),\n          row * (this.cellSize + this.padding),\n          this.cellSize,\n          this.cellSize\n        );\n        //create corresponding html box element\n        //let boxElement = document.createElement('div');\n        // this.battlefield.canvas.style.width = this.cellSize;\n        // this.battlefield.canvas.style.height = this.cellSize;\n        let x;\n        let y;\n        let image2;\n        if (this.unitGrid[row][col] instanceof Unit) {\n          x = this.unitGrid[row][col].pos[1];\n          y = this.unitGrid[row][col].pos[0];\n          if (this.unitGrid[row][col].type === \"rifleman\") {\n            image2 = this.unitImages[0];\n          } else if (this.unitGrid[row][col].type === \"sniper\") {\n            image2 = this.unitImages[1];\n          } else if (this.unitGrid[row][col].type === \"atGunner\") {\n            image2 = this.unitImages[2];\n          }\n          this.battlefield.drawImage(\n            image2,\n            8,\n            8,\n            48,\n            48,\n            col * (this.cellSize + this.padding),\n            row * (this.cellSize + this.padding),\n            this.cellSize,\n            this.cellSize\n          );\n        }\n        // unitContext.drawImage(image, 8, 8, 48, 48, this.unitOrder[i].pos[1] * (this.cellSize + this.padding), this.unitOrder[i].pos[0] * (this.cellSize + this.padding), this.cellSize, this.cellSize);\n\n        // this.battlefield.fillStyle = color;\n        // this.battlefield.fillRect(col * (this.cellSize + this.padding),\n        // row * (this.cellSize + this.padding),\n        // this.cellSize, this.cellSize);\n      }\n    }\n  }\n\n  renderOptions() {\n    let context = document.getElementById(\"\");\n    let button1 = document.createElement(\"button\");\n    let button2 = document.createElement(\"button\");\n    let button3 = document.createElement(\"button\");\n    let button4 = document.createElement(\"button\");\n\n    button1.class = \"move\";\n    button2.class = \"attack\";\n    button3.class = \"items\";\n    button4.class = \"defend\";\n\n    button1.style.display = \"block\";\n  }\n\n  draw(name) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.id = name;\n    let w = canvas.width;\n    let h = canvas.height;\n    let context = canvas.getContext(\"2d\");\n    document.body.appendChild(canvas);\n    //canvas.style.display = \"none\";\n    if (name === \"moveOptions\") {\n      this.renderOptions();\n    }\n    return this.context;\n  }\n\n  drawSquare(x, y, w, h, color) {\n    this.battlefieldContext.lineWidth = 1;\n    this.battlefieldContext.fillStyle = color;\n    this.battlefieldContext.fillRect(x, y, w, h);\n    this.battlefieldContext.strokeRect(x, y, w, h);\n  }\n\n  drawGrid() {\n    let x = 0;\n    let y = 0;\n    let w = this.squareSize;\n    let h = this.squareSize;\n\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid.length; j++) {\n        if (this.grid[i][j] === 0) {\n          this.drawSquare(x, y, w, h, \"#d3d3d2\");\n        } else {\n          this.drawSquare(x, y, w, h, \"#111\");\n        }\n        x += w;\n      }\n      y += h;\n      x = 0;\n    }\n  }\n\n  enemyAction() {\n    //ai functionality\n    //has to click end turn button\n  }\n\n  nextTurn() {\n    if (this.gameEnd()) {\n      //victory or loss screen\n    }\n    this.currentTurn++;\n    document.getElementById(\"tCount\").textContent = this.currentTurn + 1;\n    //have to update unit turn, because constructor only called once\n    this.unitTurn = this.unitOrder[this.currentTurn % this.unitOrder.length];\n    document.getElementById(\"name\").textContent = `${this.unitTurn.name}`;\n\n    if (this.unitTurn.type === null) {\n      this.enemyAction();\n    }\n    this.gameEnd();\n  }\n\n  gameEnd() {\n    if (this.currentTurn === 50) {\n      console.log(\"You lose!\");\n      return true;\n    }\n\n    if (this.won()) {\n      console.log(\"You win!\");\n      return true;\n    } else if (this.lost()) {\n      console.log(\"You lose!\");\n      return true;\n    }\n    return false;\n  }\n\n  removeUnit(unit) {\n    let index = this.unitOrder.indexOf(unit);\n    if (index > -1) {\n      this.unitOrder.splice(index, 1);\n    }\n    let x = unit.pos[0];\n    let y = unit.pos[1];\n    this.unitGrid[x][y] = 0;\n    if (unit.owner === null) {\n      this.enemies.splice(this.enemies.indexOf(unit), 1);\n    } else {\n      this.units.splice(this.units.indexOf(unit), 1);\n    }\n\n    let deadUnit = document.getElementById(unit.name);\n    deadUnit.remove();\n    this.gameEnd();\n    this.savePositions();\n    this.nextTurn();\n    this.setCurrentMoveCount();\n    let move = document.getElementById(\"move\");\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n  }\n\n  // attack(pos) {\n  //     let x = pos[0];\n  //     let y = pos[1];\n\n  //     if (this.grid[x][y] instanceof Unit && this.grid[x][y].type === null) {\n  //         this.grid[x][y].takeDamage(this.unitTurn.attack);\n  //         if (this.grid[x][y].alive === false) {\n  //             this.removeUnit(this.grid[x][y]);\n  //         }\n  //         return true;\n  //     }\n  //     return false;\n  // }\n\n  moveUnit(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    let current = this.unitTurn.pos;\n    let newPos = [current[0] + x, current[1] + y];\n    if (this.validMove(newPos)) {\n      this.unitTurn.move(newPos);\n      if (this.unitTurn.owner != null) {\n        this.grid[newPos[0]][newPos[1]] = this.unitTurn;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  validMove(pos) {\n    let x = pos[0];\n    let y = pos[1];\n    if (x > 9 || x < 0 || y > 9 || y < 0) {\n      return false;\n    }\n    if (this.grid[x][y] !== 1 || this.grid[x][y] !== 0) {\n      return false;\n    }\n    return true;\n  }\n\n  won() {\n    if (this.enemies.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  lost() {\n    if (this.units.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  setTurnOrder() {\n    let arr = [];\n    let unitCount = 0;\n    let enemyCount = 0;\n    for (let i = 0; i < this.units.length + this.enemies.length; i++) {\n      if (i % 2 === 0) {\n        arr.push(this.units[unitCount]);\n        unitCount++;\n      } else {\n        arr.push(this.enemies[enemyCount]);\n        enemyCount++;\n      }\n    }\n    console.log(arr);\n    return arr;\n  }\n\n  shuffleArray(array) {\n    let i = array.length;\n    let rand = i;\n    while (i >= 0) {\n      rand = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[rand];\n      array[rand] = temp;\n      i--;\n    }\n    return array;\n  }\n\n  renderStatus() {}\n\n  // createObjectGrid() {\n  //     let newGrid = [...Array(10)].map(e => Array(10));\n  //     for (let i = 0; i < this.grid.length; i++) {\n  //         for (let j = 0; j < this.grid.length; j++) {\n  //             if (this.grid[i][j] === 0) {\n  //                 newGrid[i][j].push(new Plain());\n  //             } else if (this.grid[i][j] === 1) {\n  //                 newGrid[i][j].push(new Wall());\n  //             } else if (this.grid[i][j] === 2) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 3) {\n  //                 newGrid[i][j].push();\n  //             } else if (this.grid[i][j] === 4) {\n  //                 newGrid[i][j].push();\n  //             } else {\n  //                 newGrid[i][j].push();\n  //             }\n  //         }\n  //     }\n  //     return newGrid;\n  // }\n}\n\nexport default Board;\n","import Unit from \"./unit\";\nclass Rifleman extends Unit {\n  constructor(name, owner = null) {\n    super(\"rifleman\", 10, 5, 1, 3, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n}\n\nexport default Rifleman;\n","import Unit from \"./unit\";\n\nclass Sniper extends Unit {\n  constructor(name, owner = null) {\n    super(\"sniper\", 10, 5, 0, 5, 3);\n    this.name = name;\n    this.owner = owner;\n  }\n}\n\nexport default Sniper;\n","export default __webpack_public_path__ + \"fb365042996395b7e7374012d1941315.png\";","import Game from \"./scripts/game\";\nimport Board from \"./scripts/board\";\nimport Background from \"./scripts/menuBackground\";\nimport Levels from \"./scripts/levels\";\n\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  // let stage;\n  let newGame = new Game(1);\n\n  document.getElementById(\"start-game\").addEventListener(\"click\", () => {\n    document.getElementById(\"start-game\").style.display = \"none\";\n    document.getElementById(\"stage-select\").style.display = \"block\";\n  });\n\n  document.getElementById(\"standard\").addEventListener(\"click\", () => {\n    newGame.stage = 1;\n    document.getElementById(\"title-screen\").style.display = \"none\";\n    document.getElementById(\"view\").style.display = \"block\";\n  });\n\n  document.getElementById(\"bridge\").addEventListener(\"click\", () => {\n    newGame.stage = 2;\n    document.getElementById(\"title-screen\").style.display = \"none\";\n    document.getElementById(\"view\").style.display = \"block\";\n  });\n\n  let endTurn = document.getElementById(\"end\");\n\n  endTurn.addEventListener(\"click\", () => {\n    newGame.board.savePositions();\n    newGame.board.nextTurn();\n    newGame.board.setCurrentMoveCount();\n    let move = document.getElementById(\"move\");\n    let attackText = document.getElementById(\"attackText\");\n    attackText.style.display = \"none\";\n    move.style.display = \"block\";\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"block\";\n    }\n  });\n\n  let move = document.getElementById(\"move\");\n  move.addEventListener(\"click\", () => {\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"none\";\n    }\n    let counter = document.getElementById(\"moveCounter\");\n    counter.style.display = \"block\";\n    counter.textContent = `Moves Left: ${newGame.board.currentMoveCount}`;\n    document.addEventListener(\"keydown\", newGame.board.moveunit);\n\n    // if (newGame.board.currentMoveCount === 0) {\n    //     //delete counter\n    //     let counter = document.getElementById(\"moveCounter\");\n    //     counter.style.display = \"none\";\n    //     //add moveOptions\n    //     let moveOptions = document.getElementsByClassName(\"moveB\");\n    //     for (let i = 0; i < moveOptions.length; i++) {\n    //         moveOptions[i].style.display = \"block\";\n    //     }\n    //     move.style.display = \"none\";\n    // }\n  });\n\n  let squares = document.getElementsByClassName(\"square\");\n  for (let i = 0; i < squares.length; i++) {\n    squares[i].addEventListener(\"mouseover\", (e) => {\n      console.log(e.target.id);\n    });\n  }\n\n  let units = document.getElementsByClassName(\"unit\");\n  for (let i = 0; i < units.length; i++) {\n    units[i].addEventListener(\"mouseover\", (e) => {\n      let stats = newGame.board.findClickedUnit(e.target.id);\n      let info = document.getElementById(\"unitInfo\");\n      info.innerHTML = `HP: ${stats[0]}\\n\n                              <br>\n                              ATK: ${stats[1]}\\n\n                              <br>\n                              DEF: ${stats[2]}\\n\n                              <br>\n                              <br>\n                              Name: ${stats[3]}\\n\n                              <br>\n                              Type: ${stats[4]}\\n\n                              <br>\n                              Alliance: ${stats[5]}`;\n    });\n  }\n\n  let attack = document.getElementById(\"attack\");\n  attack.addEventListener(\"click\", () => {\n    let moveOptions = document.getElementsByClassName(\"moveB\");\n    for (let i = 0; i < moveOptions.length; i++) {\n      moveOptions[i].style.display = \"none\";\n    }\n\n    let attackText = document.getElementById(\"attackText\");\n    attackText.style.display = \"block\";\n\n    let units = document.getElementsByClassName(\"unit\");\n    for (let i = 0; i < units.length; i++) {\n      units[i].addEventListener(\"click\", (e) => {\n        if (\n          newGame.board.enemyNames.includes(e.target.id) &&\n          newGame.board.unitTurn.owner !== null\n        ) {\n          newGame.board.attack(e.target.id);\n          newGame.board.savePositions();\n          newGame.board.nextTurn();\n          newGame.board.setCurrentMoveCount();\n          let move = document.getElementById(\"move\");\n          move.style.display = \"block\";\n          let attackText = document.getElementById(\"attackText\");\n          attackText.style.display = \"none\";\n          for (let i = 0; i < moveOptions.length; i++) {\n            moveOptions[i].style.display = \"block\";\n          }\n        }\n      });\n    }\n  });\n});\n","import Board from \"./board\";\nimport Levels from \"./levels\";\nimport Player from \"./player\";\nimport Rifleman from \"./rifleman\";\nimport Sniper from \"./sniper\";\nimport AtGunner from \"./atGunner\";\nimport Unit from \"./unit\";\n\nclass Game {\n  constructor(stage) {\n    this.board;\n    this.stage = stage;\n    if (this.stage === 1) {\n      let player = new Player(\"user\");\n      let units = [\n        new Rifleman(\"Bob\", player),\n        new Rifleman(\"Joe\", player),\n        new Sniper(\"Lex\", player),\n        new AtGunner(\"Steve\", player),\n      ];\n      let enemies = [\n        new Rifleman(\"Ben\"),\n        new Rifleman(\"Ryan\"),\n        new Sniper(\"Dakota\"),\n        new AtGunner(\"Gunther\"),\n      ];\n      this.board = new Board(BATTLEFIELDS.levelOne, units, enemies, player);\n      //this.board.render();\n      this.runGame(this.board);\n    } else if (this.stage === 2) {\n    }\n  }\n\n  // loadTitleScreen() {}\n\n  runGame(board) {\n    let context = board.battlefield;\n    function animate() {\n      window.requestAnimationFrame(animate);\n      board.render();\n    }\n    animate();\n  }\n}\n\nexport default Game;\n","// import Levels from \"./level\";\nclass Player {\n  constructor(type) {\n    this.type = type;\n    this.playerUnits = [];\n  }\n\n  assignUnits(units) {\n    this.playerUnits.concat(units);\n  }\n}\n\nexport default Player;\n"],"names":["Unit","require","module","exports","constructor","name","owner","super","this","BATTLEFIELDS","levelOne","levelTwo","background","type","health","attack","defense","range","move","alive","items","pos","setAlive","status","setPiece","newPos","giveItem","item","push","isAlive","takeDamage","dmg","console","log","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","querySelector","Rifleman","Sniper","addEventListener","newGame","stage","board","player","playerUnits","assignUnits","units","concat","AtGunner","enemies","grid","enemyUnits","keyCode","isValidMove","updateGrid","unitTurn","currentMoveCount","getElementById","textContent","removeEventListener","moveunit","style","display","moveOptions","getElementsByClassName","i","characterKey","enemyNames","unitOrder","setTurnOrder","currentTurn","unitGrid","Array","j","battlefield","drawBattlefield","cellSize","padding","setPos","tiles","fillTiles","unitImages","generateUnitImages","generateHTMLsquares","generateHTMLunits","setCurrentMoveCount","target","attackedUnit","inRange","removeUnit","xDif","yDif","findClickedUnit","alliance","savePositions","row","col","unitClick","top","left","rifleman","Image","sniper","launcher","Grenade","grass","Grass","dirt","Dirt","crate","Crate","x","y","value","getCenter","w","h","innerWidth","innerHeight","canvas","context","getContext","zIndex","id_count","square","createElement","id","className","position","width","height","appendChild","render","val","image","image2","sx","sy","drawImage","renderOptions","button1","button2","button3","button4","class","draw","body","drawSquare","color","battlefieldContext","lineWidth","fillStyle","fillRect","strokeRect","drawGrid","squareSize","enemyAction","nextTurn","gameEnd","won","lost","unit","index","indexOf","splice","remove","moveUnit","current","validMove","arr","unitCount","enemyCount","shuffleArray","array","rand","Math","floor","random","temp","renderStatus","runGame","animate","requestAnimationFrame","counter","squares","stats","innerHTML","includes"],"sourceRoot":""}